{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Desktop/workDev/MaxUdemy/forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName, 'entered name');\n    resetNameInput();\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), enteredEmailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"error-text\",\n        children: \"Email be valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"VB9SJ57OEiA5yXSuc5iFfgbOa64=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","setEnteredEmail","useState","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","enteredEmailIsInvalid","formIsValid","emailInputChangeHandler","event","target","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","emailInputClasses"],"sources":["/Users/dev/Desktop/workDev/MaxUdemy/forms/src/components/SimpleInput.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n \n  \n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  \n  \n\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  \n  let formIsValid = false;\n  \n  if(enteredNameIsValid && enteredEmailIsValid ) {\n    formIsValid =true;\n  } \n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  };\n \n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n\n    if(!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName, 'entered name');\n    resetNameInput();\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n\n\n  const nameInputClasses = nameInputHasError\n  ? 'form-control invalid' \n  : 'form-control';\n\n  const emailInputClasses = enteredEmailIsInvalid \n  ? 'form-control invalid' \n  : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && ( <p class=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input \n          type='text' \n          id='email' \n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {enteredEmailIsInvalid && (\n           <p class=\"error-text\">Email be valid</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}