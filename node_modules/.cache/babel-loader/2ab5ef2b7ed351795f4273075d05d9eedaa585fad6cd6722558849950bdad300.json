{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Desktop/workDev/MaxUdemy/forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid]);\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName, 'entered name');\n\n    // const enteredValue = nameInputRef.current.value;\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !setFormIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"ZOiR34dF0nDXImU7BVmUuHK4oO8=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputIsInvalid","setFormIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses"],"sources":["/Users/dev/Desktop/workDev/MaxUdemy/forms/src/components/SimpleInput.js"],"sourcesContent":["import {  useEffect, useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  \n  const [ enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  \n\n  useEffect(() => {\n    if(enteredNameIsValid ) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n \n    \n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n\n\n\n  };\n \n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if(!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName, 'entered name');\n    \n    // const enteredValue = nameInputRef.current.value;\n   \n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n\n\n\n  const nameInputClasses = nameInputIsInvalid \n  ? 'form-control invalid' \n  : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          ref={nameInputRef} \n          type='text' \n          id='name' \n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && ( <p class=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!setFormIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAAUA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAErD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAMC,YAAY,GAAGJ,MAAM,EAAE;EAC7B,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM,CAAEM,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACpE,MAAMQ,kBAAkB,GAAGJ,WAAW,CAACK,IAAI,EAAE,KAAK,EAAE;EACpD,MAAMC,kBAAkB,GAAG,CAACF,kBAAkB,IAAIF,kBAAkB;EAGpER,SAAS,CAAC,MAAM;IACd,IAAGU,kBAAkB,EAAG;MACtBG,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACLA,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC,EAAE,CAACH,kBAAkB,CAAC,CAAC;EAExB,MAAMI,sBAAsB,GAAIC,KAAK,IAAK;IACxCR,cAAc,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAGpC,CAAC;EACD,MAAMC,oBAAoB,GAAGH,KAAK,IAAI;IACpCN,qBAAqB,CAAC,IAAI,CAAC;EAI7B,CAAC;EAGD,MAAMU,qBAAqB,GAAIJ,KAAK,IAAK;IACvCA,KAAK,CAACK,cAAc,EAAE;IACtBX,qBAAqB,CAAC,IAAI,CAAC;IAC3B,IAAG,CAACC,kBAAkB,EAAE;MACtB;IACF;IACAW,OAAO,CAACC,GAAG,CAAChB,WAAW,EAAE,cAAc,CAAC;;IAExC;;IAEAC,cAAc,CAAC,EAAE,CAAC;IAClBE,qBAAqB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAID,MAAMc,gBAAgB,GAAGX,kBAAkB,GACzC,sBAAsB,GACtB,cAAc;EAEhB,oBACE;IAAM,QAAQ,EAAEO,qBAAsB;IAAA,wBACpC;MAAK,SAAS,EAAEI,gBAAiB;MAAA,wBAC/B;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvC;QACE,GAAG,EAAElB,YAAa;QAClB,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAES,sBAAuB;QACjC,MAAM,EAAEI,oBAAqB;QAC7B,KAAK,EAAEZ;MAAY;QAAA;QAAA;QAAA;MAAA,QACnB,EACDM,kBAAkB,iBAAM;QAAG,KAAK,EAAC,YAAY;QAAA,UAAC;MAAsB;QAAA;QAAA;QAAA;MAAA,QACpE;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAQ,QAAQ,EAAE,CAACC,cAAe;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAC9C;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GAtEIV,WAAW;AAAA,KAAXA,WAAW;AAwEjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}