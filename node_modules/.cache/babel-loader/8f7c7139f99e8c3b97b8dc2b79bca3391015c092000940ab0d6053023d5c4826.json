{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Desktop/workDev/MaxUdemy/forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enterdName.trim() !== '';\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n    if (event.target.value.trim() !== '') {\n      setEnteredNameIsValid(true);\n    }\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    console.log(enteredName, 'entered name');\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue, 'entered val');\n    setEnteredName('');\n  };\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"p5f7NvcDzqgMJODiDiC/tC68NP4=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","enterdName","trim","nameInputChangeHandler","event","target","value","setEnteredNameIsValid","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","enteredValue","current","nameInputIsInvalid","nameInputClasses"],"sources":["/Users/dev/Desktop/workDev/MaxUdemy/forms/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  \n  const [ enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid =enterdName.trim() !== '';\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n    if(event.target.value.trim() !== '') {\n      setEnteredNameIsValid(true);\n    }\n    \n  };\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n\n    if(enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n  };\n \n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if(enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    console.log(enteredName, 'entered name');\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue, 'entered val');\n    setEnteredName('');\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputClasses = nameInputIsInvalid \n  ? 'form-control invalid' \n  : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          ref={nameInputRef} \n          type='text' \n          id='name' \n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && ( <p class=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEpD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAMC,YAAY,GAAGJ,MAAM,EAAE;EAC7B,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM,CAAEM,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACpE,MAAMQ,kBAAkB,GAAEC,UAAU,CAACC,IAAI,EAAE,KAAK,EAAE;EAElD,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;IACxCP,cAAc,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAClC,IAAGF,KAAK,CAACC,MAAM,CAACC,KAAK,CAACJ,IAAI,EAAE,KAAK,EAAE,EAAE;MACnCK,qBAAqB,CAAC,IAAI,CAAC;IAC7B;EAEF,CAAC;EACD,MAAMC,oBAAoB,GAAIJ,KAAK,IAAK;IACtCL,qBAAqB,CAAC,IAAI,CAAC;IAE3B,IAAGH,WAAW,CAACM,IAAI,EAAE,KAAK,EAAE,EAAE;MAC5BK,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACF;EAEF,CAAC;EAGD,MAAME,qBAAqB,GAAIL,KAAK,IAAK;IACvCA,KAAK,CAACM,cAAc,EAAE;IACtBX,qBAAqB,CAAC,IAAI,CAAC;IAC3B,IAAGH,WAAW,CAACM,IAAI,EAAE,KAAK,EAAE,EAAE;MAC5BK,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACF;IACAI,OAAO,CAACC,GAAG,CAAChB,WAAW,EAAE,cAAc,CAAC;IACxC,MAAMiB,YAAY,GAAGlB,YAAY,CAACmB,OAAO,CAACR,KAAK;IAC/CK,OAAO,CAACC,GAAG,CAACC,YAAY,EAAE,aAAa,CAAC;IACxChB,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMkB,kBAAkB,GAAG,CAACf,kBAAkB,IAAIF,kBAAkB;EAEpE,MAAMkB,gBAAgB,GAAGD,kBAAkB,GACzC,sBAAsB,GACtB,cAAc;EAEhB,oBACE;IAAM,QAAQ,EAAEN,qBAAsB;IAAA,wBACpC;MAAK,SAAS,EAAEO,gBAAiB;MAAA,wBAC/B;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvC;QACE,GAAG,EAAErB,YAAa;QAClB,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAEQ,sBAAuB;QACjC,MAAM,EAAEK,oBAAqB;QAC7B,KAAK,EAAEZ;MAAY;QAAA;QAAA;QAAA;MAAA,QACnB,EACDmB,kBAAkB,iBAAM;QAAG,KAAK,EAAC,YAAY;QAAA,UAAC;MAAsB;QAAA;QAAA;QAAA;MAAA,QACpE;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAA,UAAQ;MAAM;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GAhEItB,WAAW;AAAA,KAAXA,WAAW;AAkEjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}